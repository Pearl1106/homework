class Queue(object):
    def __init__(self, initial_data):
        self.queue = []
        self.initial_data = initial_data
        if isinstance(initial_data, Iterable):
            self.queue = list(initial_data)
        else:
            raise NotImplementedError('Inital with not iterable object')
 
    def __repr__(self):
        return 'Queue(initial_data={!r})'.format(self.initial_data)
 
    def __len__(self):
        return len(self.queue)
 
    def __getitem__(self, i):
        return self.queue[i]

    def is_empty(self):
        return len(self.queue) == 0
 
    def enqueue(self, data):
        return self.queue.append(data)
 
    def dequeue(self):
        return self.queue.pop(0)
 
    def peek(self):
        return self.queue[0]
